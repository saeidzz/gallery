/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gallery;

import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author saeid
 */

public class NewJFrame extends javax.swing.JFrame {
    //آرایه ای جهت نگه داشت ن عکس ها برای نمایش
 public BufferedImage[] AlImages=new BufferedImage[20];
 //عکس فعلی که درحال نمایش است
 public BufferedImage nowImage;
//متغیری جهت کمک برای رفتن از یک عکس به عکس قبلی یا به عکس  بعدی از آن در دکمه ها عقب جلو استفاده میشود
 public int k=0;
//تابعی که از کلاس  دیگر صدا زده میشود
    void show(BufferedImage img, BufferedImage[] AllImages) {
                Label.setIcon(new ImageIcon(img));
                nowImage=img;
                AlImages=AllImages;
                

    }
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Toools = new javax.swing.JPanel();
        ZoonIN = new javax.swing.JButton();
        ZoonOut = new javax.swing.JButton();
        Next = new javax.swing.JButton();
        pr = new javax.swing.JButton();
        Rotate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Label = new javax.swing.JLabel();

        setResizable(false);

        Toools.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ابزار", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));

        ZoonIN.setText("Zoom in");
        ZoonIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoonINActionPerformed(evt);
            }
        });

        ZoonOut.setText("Zoom Out");
        ZoonOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZoonOutActionPerformed(evt);
            }
        });

        Next.setText("بعدی");
        Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextActionPerformed(evt);
            }
        });

        pr.setText("قبلی");
        pr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prActionPerformed(evt);
            }
        });

        Rotate.setText("چرخش");
        Rotate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RotateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TooolsLayout = new javax.swing.GroupLayout(Toools);
        Toools.setLayout(TooolsLayout);
        TooolsLayout.setHorizontalGroup(
            TooolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TooolsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TooolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Rotate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pr, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ZoonIN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ZoonOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(Next, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        TooolsLayout.setVerticalGroup(
            TooolsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TooolsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ZoonIN, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ZoonOut, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Next, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pr, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Rotate, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Toools, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(Toools, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//تابعی جهت کنترل دکمه 
    //zoomIn
    private void ZoonINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoonINActionPerformed
        
     try {
         Zoom(1);
     } catch (IOException ex) {
         Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
     }

    }//GEN-LAST:event_ZoonINActionPerformed
//تابعی جهت کنترل دکمه 
    //رفتن به عکس بعدی
    //nextImage
    private void NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextActionPerformed
        // TODO add your handling code here:
        
     for(int i=0;i<20;i++){
        if(Label.getIcon().equals(AlImages[i])){
            k=i;
        }
     }
     try{
         k++;
         if(k>=20){
             k=19;
         }
     if(AlImages[k]!=null){
     Label.setIcon(new ImageIcon(AlImages[k]));
     nowImage=AlImages[k];
     }else{
         k--;
     }
     }catch(ArrayIndexOutOfBoundsException e){
         
     }
    
    }//GEN-LAST:event_NextActionPerformed
//تابعی جهت کنترل دکمه 
    //Rotate
    private void RotateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RotateActionPerformed
      
      BufferedImage ing=nowImage;  
      Graphics2D g=(Graphics2D) ing.getGraphics();
      g.rotate(Math.toDegrees(90));
      g.drawImage(ing, 0, 0, null);
    
      AffineTransform transform = new AffineTransform();
    transform.rotate(Math.PI/2, ing.getWidth()/2, ing.getHeight()/2);
    AffineTransformOp op = new AffineTransformOp(transform, AffineTransformOp.TYPE_BILINEAR);
    ing = op.filter(ing, null);
      
                 transform.translate(getWidth() / 2, getHeight() / 2);

              // 3. do the actual rotation
              transform.rotate(Math.PI/4);

              // 2. just a scale because this image is big
              transform.scale(0.5, 0.5);

              // 1. translate the object so that you rotate it around the 
              //    center (easier :))
              transform.translate(ing.getWidth()/2, ing.getHeight()/2);

    
      Label.setIcon(new ImageIcon(ing));
      nowImage=ing;
      
      
    }//GEN-LAST:event_RotateActionPerformed
//تابعی جهت کنترل دکمه  
    //رفتن به عکس قبلی
    private void prActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prActionPerformed
for(int i=0;i<20;i++){
        if(Label.getIcon().equals(AlImages[i])){
            k=i;
        }
     }
     k--;
     if(k<0){
         k=0;
     }
     try{
     if(AlImages[k]!=null){
     Label.setIcon(new ImageIcon(AlImages[k]));
     nowImage=AlImages[k];
     }
     }catch (ArrayIndexOutOfBoundsException e){
         
     }
    }//GEN-LAST:event_prActionPerformed
//تابعی جهت کنترل دکمه 
    //zoomIn
    private void ZoonOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZoonOutActionPerformed
        // TODO add your handling code here:
         try {
         Zoom(-1);
     } catch (IOException ex) {
         Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
     }

    
    }//GEN-LAST:event_ZoonOutActionPerformed

    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label;
    private javax.swing.JButton Next;
    private javax.swing.JButton Rotate;
    private javax.swing.JPanel Toools;
    private javax.swing.JButton ZoonIN;
    private javax.swing.JButton ZoonOut;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton pr;
    // End of variables declaration//GEN-END:variables

 @SuppressWarnings("empty-statement")
 // یک تابع برای انجام عمل زوم 
    public void Zoom(int i) throws IOException {
        Label.setIcon(new ImageIcon(resizeImage(nowImage,(nowImage.getWidth()+(i*100)),(nowImage.getHeight()+(i*75)), 5)));
        nowImage=resizeImage(nowImage,(nowImage.getWidth()+(i*100)),(nowImage.getHeight()+(i*75)), 5);
    }
    //تابعی جهت تغییر اندازه عکس که از آن در تابع زوم استفاده میشود
    //خروجی آن یک عکس تغییر اندازه داده شده است
    public BufferedImage resizeImage(BufferedImage originalImage, int width, int height, int type) throws IOException {  
        BufferedImage resizedImage = new BufferedImage(width, height, type);  
        Graphics2D g = resizedImage.createGraphics();  
        g.drawImage(originalImage, 0, 0, width, height, null);  
        g.dispose();  
        return resizedImage;  
    }  


   
}
